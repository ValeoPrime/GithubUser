{"version":3,"sources":["components/NavBar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","components/loader/Loader.js","pages/Home.js","pages/About.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/actionTypes.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","AlertContext","createContext","GithubContext","Search","useState","startInputValue","setInputValue","useContext","show","hide","github","placeholder","onKeyPress","event","key","trim","search","clearUsers","value","onChange","target","Card","user","style","alignItems","src","avatar_url","alt","login","maxWidth","borderRadius","Loader","Home","loading","users","console","log","map","About","role","onClick","Profile","match","getUser","getRepos","repos","curentUser","params","name","useEffect","company","location","bio","blog","html_url","followers","following","public_repos","public_gists","width","href","rel","join","item","created_at","description","Alert","alert","text","aria-hidden","alertReducer","state","action","payload","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","userName","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b1323e1d.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <NavLink className=\"navbar-brand\" to=\"/\">Github Users</NavLink>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <NavLink className=\"nav-link\" to=\"/\">Главная <span className=\"sr-only\">(current)</span></NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/about\">О приложении</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/profile\">Профиль</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import {createContext} from 'react'\r\n\r\nexport const AlertContext = createContext()","import { createContext } from 'react';\r\n\r\nexport const GithubContext = createContext()\r\n","import React, {useContext, useState} from 'react'\r\nimport {AlertContext} from '../context/alert/alertContext'\r\nimport { GithubContext } from '../context/github/githubContext'\r\n\r\nexport const Search = () => {\r\n\r\n    const [startInputValue, setInputValue] = useState('')\r\n    const {show, hide} = useContext(AlertContext)\r\n    const github = useContext(GithubContext)\r\n\r\n    // console.log('ГИТХАБ КОНТЕКСТ',github);\r\n    \r\n\r\n   const onSubmit = (event) => {\r\n    if(event.key !== 'Enter'){\r\n        return \r\n    }\r\n\r\n    if(startInputValue.trim()){\r\n        hide()\r\n        github.search(startInputValue.trim())\r\n    } else {\r\n        github.clearUsers()\r\n        show('Чтобы я что-то поискал, надо что-то ввести', 'info')\r\n    }\r\n    \r\n       \r\n    }\r\n\r\n    return (\r\n        <div className='form-group'>\r\n            <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Введите ник пользователя'\r\n            onKeyPress={onSubmit}\r\n            value = {startInputValue}\r\n            onChange = {event => setInputValue(event.target.value)}\r\n            >\r\n            \r\n            </input>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport const Card = ({user}) => {\r\n    \r\n    return (\r\n        <div className=\"card .bg-gradient-light pt-4\" style={{ alignItems: 'center', }}>\r\n            <img className=\"card-img-top\" src={user.avatar_url} alt={user.login} style={{maxWidth: '200px', borderRadius: '10px'\r\n        }}/>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">${user.login}</h5>\r\n                <Link to={'/profile/' + user.login } className=\"btn btn-primary\">О пользователе подробно</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}","import React from 'react'\r\nimport './Loader.css'\r\n\r\n\r\nexport const Loader = () => {\r\n   \r\n    return (\r\n\r\n        <div className='cssloadloader'>\r\n            <div className='cssloadinner cssloadone'></div>\r\n            <div className='cssloadinner cssloadtwo'></div>\r\n            <div className='cssloadinner cssloadthree'></div>\r\n        </div>    \r\n    )\r\n}","import React, { Fragment, useContext } from 'react'\r\nimport {Search} from '../components/Search'\r\nimport { Card } from '../components/Card'\r\nimport { GithubContext } from '../context/github/githubContext'\r\nimport { Loader } from '../components/loader/Loader'\r\n\r\nexport const Home = () => {\r\n    const {loading, users} = useContext(GithubContext)\r\n    console.log('лоадинг',loading);\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <Search/>\r\n            <div className='row'>\r\n\r\n            {loading \r\n            ?\r\n            <Loader/>\r\n            : \r\n            users.map(user => {\r\n                return (\r\n                    <div className='col-sm-4 mb-4' key={user.id}>\r\n                        <Card\r\n                            user={user}\r\n                        />\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n            </div>\r\n        </Fragment> \r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {GithubContext} from '../context/github/githubContext'\r\n\r\nexport const About = () => {\r\n    const {clearUsers} = useContext(GithubContext)\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <h1 className=\"display-4\">Привет всем</h1>\r\n            <p className=\"lead\">Это небольшое приложение использует публичное АПИ гитхаба для поиска пользователей и их репозиториев</p>\r\n            <hr className=\"my-4\"/>\r\n            <p>Вы можете ознакомится с основными его возможностями нажав кнопку ниже</p>\r\n            <p className=\"lead\">\r\n                <NavLink className=\"btn btn-success btn-lg mt-4\" to=\"/\" role=\"button\"\r\n                onClick={clearUsers}\r\n                >Попробовать найти себя:)</NavLink>\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useEffect, Fragment } from 'react'\r\nimport { GithubContext } from '../context/github/githubContext'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Profile = ({ match }) => {\r\n    const { getUser, getRepos, loading, user, repos } = useContext(GithubContext)\r\n    const curentUser = match.params.name\r\n\r\n    \r\n    useEffect(()=>{\r\n        getUser(curentUser)\r\n        getRepos(curentUser)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    if(loading) {\r\n        return <p>Идет загрузка</p>\r\n    }\r\n\r\n\r\n    const {\r\n        name, company, avatar_url,\r\n        location, bio, blog,\r\n        login, html_url, followers,\r\n        following, public_repos,\r\n        public_gists\r\n      } = user\r\n\r\n      \r\n      return (\r\n        <Fragment>\r\n          <Link to=\"/\" className=\"btn btn-link btn-light\">На главную</Link>\r\n          \r\n          <div className=\"card mb-4 mt-2\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-4 text-center\">\r\n                  <img\r\n                    src={avatar_url}\r\n                    alt={name}\r\n                    style={{width: '150px', borderRadius: '10px'}}\r\n                  />\r\n                  <h1>{name}</h1>\r\n                  {location && <p>Местоположение: {location}</p>}\r\n                </div>\r\n                <div className=\"col\">\r\n                  {\r\n                    bio && <Fragment>\r\n                      <h3>BIO</h3>\r\n                      <p>{bio}</p>\r\n                    </Fragment>\r\n                  }\r\n                  <a\r\n                    href={html_url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"btn btn-dark\"\r\n                  >Открыть профиль  на GitHub</a>\r\n                  <ul>\r\n                    {login && <li className='mt-2'>\r\n                      <strong>Username: </strong> {login}\r\n                    </li>}\r\n    \r\n                    {company && <li className='mt-2'>\r\n                      <strong>Компания: </strong> {company}\r\n                    </li>}\r\n    \r\n                    {blog && <li className='mt-2'>\r\n                      <strong>Website: </strong> {blog}\r\n                    </li>}\r\n                  </ul>\r\n    \r\n                  <div className=\"badge badge-primary mr-2\">Подписчики: {followers}</div>\r\n                  <div className=\"badge badge-success mr-2\">Подписан: {following}</div>\r\n                  <div className=\"badge badge-info mr-2\">Репозитории: {public_repos}</div>\r\n                  <div className=\"badge badge-dark mr-2\">Gists: {public_gists}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    \r\n          {repos.join()\r\n          }\r\n        <div className='row'>\r\n\r\n          { repos.map(item => {\r\n            return (\r\n            <div className='col-sm-4 mb-4' key={item.id}>\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{item.name}</h5>\r\n                  <h6 className=\"card-subtitle mb-2 text-muted\">Создан: {item.created_at}</h6>\r\n                  <p className=\"card-text\">{item.description || 'Автор не указал описание:('}</p>\r\n                  <a href={item.html_url} className=\"btn btn-primary\">Перейти на репозиторий в Github</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            )\r\n          })\r\n\r\n          }\r\n          \r\n        </div>\r\n          </Fragment> \r\n        \r\n      )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\n\r\nexport const Alert = () => {\r\n\r\n\r\n    const { alert, hide } = useContext(AlertContext)\r\n\r\n    if (!alert) return null\r\n\r\n    return (\r\n        <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\r\n            role=\"alert\">\r\n            {alert.text}\r\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import {SHOW_ALERT, HIDE_ALERT} from '../actionTypes'\r\n\r\nexport const alertReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case SHOW_ALERT:\r\n            return action.payload\r\n\r\n        case HIDE_ALERT:\r\n            return null\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\n\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS= 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'\r\n","import React, {useReducer} from 'react'\r\nimport { AlertContext } from './alertContext'\r\nimport {alertReducer} from '../alert/alertReducer'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../actionTypes'\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, null)\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n    const show = (text, type = 'secondary') => dispatch({\r\n        type: SHOW_ALERT,\r\n        payload: {type, text}\r\n    })\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            hide, show, alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../actionTypes'\r\n\r\nexport const githubReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case CLEAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: []\r\n            }\r\n\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        case SEARCH_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { GithubContext } from './githubContext'\r\nimport { githubReducer } from './githubReducer'\r\nimport axios from 'axios'\r\n\r\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../actionTypes'\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => {\r\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n}\r\n\r\n\r\nexport const GithubState = ({ children }) => {\r\n    const initialState = {\r\n        user: {},\r\n        users: [],\r\n        loading: false,\r\n        repos: []\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n    const search = async (value) => {\r\n        setLoading()\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n        )\r\n\r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: response.data.items\r\n        })\r\n    }\r\n\r\n    const getUser = async (userName) => {\r\n        setLoading()\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${userName}?`)\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const getRepos = async (userName) => {\r\n        setLoading()\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${userName}/repos?per_page=10&`)\r\n        )\r\n      \r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const clearUsers = () => { dispatch({ type: CLEAR_USERS }) }\r\n\r\n    const setLoading = () => { dispatch({ type: SET_LOADING }) }\r\n\r\n    const { user, users, loading, repos } = state\r\n\r\n\r\n\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            search, getUser, getRepos, clearUsers, setLoading, user, users, loading, repos\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n\r\n    )\r\n}","import React from 'react';\nimport { Navbar } from './components/NavBar';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport { Home } from './pages/Home';\nimport {About} from './pages/About'\nimport {Profile} from './pages/Profile' \nimport { Alert } from './components/Alert';\nimport {AlertState} from './context/alert/AlertState'\nimport { GithubState } from './context/github/GithubState';\n\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar/>\n          <div className='container pt-4'>\n            <Alert alert={{text: 'Тестовый алерт', type: 'primary'}}/>\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/profile/:name\" component={Profile} />\n              </Switch>\n          </div>  \n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}